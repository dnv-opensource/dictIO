[metadata]
name = dictIO
version = 0.2.3
summary = Read, write and manipulate dictionary text files.
description = Python package to read, write and manipulate dictionary text files. Supports dictIOs dict file format, as well as JSON, XML and OpenFOAM.
long_description = file: README.md
long_description_content_type = text/markdown
home_page = https://dnv-opensource.github.io/dictIO/
project_urls =
    GitHub = https://github.com/dnv-opensource/dictIO
license = MIT
license_files = LICENSE
classifiers =
    Development Status :: 5 - Production/Stable
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Operating System :: Microsoft :: Windows
    Operating System :: POSIX :: Linux
    Environment :: Console
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    Topic :: Scientific/Engineering
    Topic :: Software Development :: Libraries :: Python Modules
platform = Python3.x
readme_file = README.md
author = Frank Lumpitzsch
author_email = "Frank Lumpitzsch" <frank.lumpitzsch@dnv.com>
maintainer = Claas Rostock
maintainer_email = "Claas Rostock" <claas.rostock@dnv.com>

[options]
package_dir =
    =src
packages = find:
include_package_data = True
python_requires = >=3.9
install_requires =
    lxml>=4.9
    jsonschema>=4.17

[options.packages.find]
where = src
exclude =
    test*

[options.package_data]
* = py.typed

[options.entry_points]
console_scripts =
    dictParser = dictIO.cli.dictParser:main

[flake8]
ignore = E116, E117, E123, E126, E226, E133, E251, E501, E701, W503
ignore-names = test_*, setUp, tearDown

[tool:pytest]
addopts = --strict-markers
xfail_strict = True
testpaths =
    tests

[coverage:run]
source = dictIO
branch = True

[coverage:report]
show_missing = True

[coverage:paths]
source =
    src/dictIO/
    .tox/py39/Lib/site-packages/dictIO/
    .tox/py310/Lib/site-packages/dictIO/

[tox:tox]
isolated_build = True
envlist =
    py39
    py310

[testenv]
deps =
    pytest>=6.2.5
    pytest-cov>=3.0.0
    pytest-randomly>=3.11.0
install_command = pip install {opts} {packages}
commands =
    pytest --cov-config setup.cfg --cov {posargs}