# From: https://github.com/coderefinery/sphinx-lesson/blob/master/.github/workflows/sphinx.yml

name: sphinx
on: push

env:
  DEFAULT_BRANCH: "release"
  #SPHINXOPTS: "-W --keep-going -T"
  # ^-- If these SPHINXOPTS are enabled, then be strict about the builds and fail on any warnings

jobs:
  build-and-deploy:
    name: Build and gh-pages
    runs-on: ubuntu-latest
    steps:

      # PREPARE

      # Checkout (the branch that triggered the workflow)
      # https://github.com/marketplace/actions/checkout
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      # Install Python
      # https://github.com/marketplace/actions/setup-python
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # Cache pip
      # https://docs.github.com/en/actions/guides/building-and-testing-python#caching-dependencies
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      # Install dependencies
      # https://docs.github.com/en/actions/guides/building-and-testing-python#installing-dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Debugging information
        run: |
          echo "github.ref:" ${{github.ref}}
          echo "github.event_name:" ${{github.event_name}}
          echo "github.head_ref:" ${{github.head_ref}}
          echo "github.base_ref:" ${{github.base_ref}}
          set -x
          git rev-parse --abbrev-ref HEAD
          git branch
          git branch -a
          git remote -v
          python -V
          pip list --not-required
          pip list


      # BUILD DOCUMENTATION

      # Build documentation
      - uses: ammaraskar/sphinx-problem-matcher@master
      - name: Build Sphinx docs
        run: |
          cd docs
          make html


      # SAVE DOCUMENTATION

      # Clone and cleanup old gh-pages branch
      - name: Clone old gh-pages
        run: |
          set -x
          git fetch
          ( git branch gh-pages remotes/origin/gh-pages && git clone . --branch=gh-pages _gh-pages/ ) || mkdir _gh-pages
          rm -rf _gh-pages/.git/
          mkdir -p _gh-pages/branch/

      # If default branch: copy build to _gh-pages/
      - name: Copy new build (default branch)
        if: |
          contains(github.ref, env.DEFAULT_BRANCH)
        run: |
          set -x
          # Delete everything under _gh-pages/ that is from the
          # primary branch deployment.  Excludes the other branches
          # _gh-pages/branch-* paths, and not including
          # _gh-pages itself.
          find _gh-pages/ -mindepth 1 ! -path '_gh-pages/branch*' -delete
          rsync -a docs/build/html/ _gh-pages/

      # If not default branch: copy build to _gh-pages/branch/$brname
      # ('/' is transformed to '--')
      - name: Copy new build (branch)
        if: |
          !contains(github.ref, env.DEFAULT_BRANCH)
        run: |
          set -x
          #brname=$(git rev-parse --abbrev-ref HEAD)
          brname="${{github.ref}}"
          brname="${brname##refs/heads/}"
          brdir=${brname//\//--}   # replace '/' with '--'
          rm -rf   _gh-pages/branch/${brdir}
          rsync -a docs/build/html/ _gh-pages/branch/${brdir}

      # Go through each subfolder in _gh-pages/branch/
      # If it is not a ref, delete it.
      - name: Delete old feature branches
        if: ${{ github.event_name == 'push' }}
        run: |
          set -x
          for brdir in `ls _gh-pages/branch/` ; do
              brname=${brdir//--/\/}   # replace '--' with '/'
              if ! git show-ref remotes/origin/$brname ; then
                  echo "Removing $brdir"
                  rm -r _gh-pages/branch/$brdir/
              fi
          done

      # Add .nojekyll file
      - name: nojekyll
        run: |
          touch _gh-pages/.nojekyll


      # DEPLOY DOCUMENTATION

      # Commit gh-pages branch and deploy it to GitHub Pages
      # https://github.com/peaceiris/actions-gh-pages
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _gh-pages/
          force_orphan: true