# From: https://pypi.org/project/test-github-actions/

name: Build and publish package on pypi
on:
  push:
    branches:
      - release

jobs:
  build-and-publish-package:
    name: Build and publish package on pypi
    runs-on: ubuntu-latest
    environment: pypi
    steps:

      # PREPARE

      # Checkout release branch
      # https://github.com/marketplace/actions/checkout
      - name: Checkout release branch
        uses: actions/checkout@v2
        with:
          ref: release
          fetch-depth: 1
          lfs: true

      # Install Python
      # https://github.com/marketplace/actions/setup-python
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.2

      # Cache pip
      # https://docs.github.com/en/actions/guides/building-and-testing-python#caching-dependencies
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      # Install dependencies
      # https://docs.github.com/en/actions/guides/building-and-testing-python#installing-dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install -r requirements.txt
      - name: Debugging information
        run: |
          echo "github.ref:" ${{github.ref}}
          echo "github.event_name:" ${{github.event_name}}
          echo "github.head_ref:" ${{github.head_ref}}
          echo "github.base_ref:" ${{github.base_ref}}
          set -x
          git rev-parse --abbrev-ref HEAD
          git branch
          git branch -a
          git remote -v
          python -V
          pip list --not-required
          pip list

      # Install build and twine
      # https://docs.github.com/en/actions/guides/building-and-testing-python#installing-dependencies
      - name: Install build and twine
        run: |
          pip install build
          pip install twine


      # BUILD

      # Build Python package
      - name: Build
        run: |
          python -m build


      # PUBLISH

      # Publish Python package on pypi
      - name: Publish on pypi
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m twine upload --repository pypi dist/*
