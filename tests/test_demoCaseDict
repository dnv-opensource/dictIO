/*---------------------------------*- C++ -*----------------------------------*\
filetype dictionary; coding utf-8; version 0.1; local --; purpose --;
\*----------------------------------------------------------------------------*/
#include '.\test_demoCaseDict_paramDict'
connections
{
    in_0_to_diff_0
    {
        source                in_0_tx;
        target                diff_0_rx_0;
    }
    in_1_to_diff_0
    {
        source                in_1_tx;
        target                diff_0_rx_1;
    }
    in_2_to_div_0
    {
        source                in_2_tx;
        target                div_0_rx_0;
    }
    diff_0_to_div_0
    {
        source                diff_0_tx;
        target                div_0_rx_1;
    }
}
connectors
{
    diff_0_rx_0
    {
        inModel               diff_0;
        reference             difference.IN1;
        type                  input;
    }
    diff_0_rx_1
    {
        inModel               diff_0;
        reference             difference.IN2;
        type                  input;
    }
    diff_0_tx
    {
        inModel               diff_0;
        reference             difference.OUT;
        type                  input;
    }
    div_0_rx_0
    {
        inModel               div_0;
        reference             quotient.IN1;
        type                  input;
    }
    div_0_rx_1
    {
        inModel               div_0;
        reference             quotient.IN2;
        type                  input;
    }
    div_0_tx
    {
        inModel               div_0;
        reference             quotient.OUT;
        type                  input;
    }
    in_0_tx
    {
        inModel               in_0;
        reference             constVal.OUT;
        type                  output;
    }
    in_1_tx
    {
        inModel               in_1;
        reference             constVal.OUT;
        type                  output;
    }
    in_2_tx
    {
        inModel               in_2;
        reference             constVal.OUT;
        type                  output;
    }
}
global
{
    libSource                 'C:\Users\fralum\Documents\SystemSimulation\NEW-centralizedModelBase\fmu\SxExS';
    root                      .;
}
models
{
    diff_0
    {
        prototype             Logics\difference\difference.fmu;
        stepSize              0.1;
    }
    div_0
    {
        prototype             Logics\quotient\quotient.fmu;
        stepSize              0.1;
    }
    in_0
    {
        modify
        {
            constVal.IN
            {
                causality     parameter;
                start         $in_0;
                variability   fixed;
            }
        }
        prototype             Logics\constantVal\constantVal.fmu;
        stepSize              0.1;
    }
    in_1
    {
        //generateProxy         True;
        modify
        {
            constVal.IN
            {
                causality     parameter;
                start         $in_1;
                variability   fixed;
            }
        }
        prototype             Logics\constantVal\constantVal.fmu;
        stepSize              0.1;
    }
    in_2
    {
        //generateProxy         True;
        modify
        {
            constVal.IN
            {
                causality     parameter;
                start         $in_2;
                variability   fixed;
            }
        }
        prototype             Logics\constantVal\constantVal.fmu;
        stepSize              0.1;
    }
}
postproc
{
}
simulation
{
    name                      demoCase;
}
