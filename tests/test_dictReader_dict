/*---------------------------------*- C++ -*----------------------------------*\
filetype dictionary; coding utf-8; version 0.1; local --; purpose --;
\*----------------------------------------------------------------------------*/

#include 'test_dictReader_paramDict'

references
{
    reference   // reference
    {
        name              'reference';
        value             $paramA;   // Simple reference to a variable. References are prefixed with $.
    }
    expression1   // expression 1
    {
        name              'expression1';
        value             "$paramB";  // Expression. However, result of this expression is same as using a simple reference without double quotes.
    }
    expression2   // expression 2
    {
        name              'expression2';
        value             "$paramC + 4";  // Expression with one reference and one constant.
    }
    expression3   // expression 3
    {
        name              'expression3';
        value             "$paramC + $paramD";  // Expression with two references.
    }
    expressionE
    {
        name              'expressionE0';
        value             $paramE[0];  // Expression containing a list
    }
    expressionF
    {
        name              'expressionF00';
        value             $paramF[0][0];  // Expression containing lists of a list
    }
    expressionG1
    {
        name              'expressionG1';
        value             "$paramG[1][2]";  // Expression containing lists of a list, one value taken
    }
    expressionG2
    {
        name              'expressionG2';
        value             "$paramG[0]";  // Expression containing lists of a list, but one row taken
    }
    expressionG3
    {
        name              'expressionG3';
        value             "$paramG";  // Expression containing lists of a list, but the whole object is referenced
    }
}
